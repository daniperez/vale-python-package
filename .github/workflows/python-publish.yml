# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    # Environments testing / production corresponding
    # to PyPi testing and production servers.
    # environment: testing
    environment: production 
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip build --user
    - name: Build package
      run: python3 -m build --sdist --wheel
    - name: Publish package
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
  publish:
    name: Publish Python üêç distribution üì¶ to PyPI
    # if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://pypi.org/p/vale
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
